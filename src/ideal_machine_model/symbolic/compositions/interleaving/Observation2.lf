target UCLID {
    bmc: 15
};

reactor A {
    output outB:int;
    output outC:int;
    reaction(startup) -> outB, outC {=
        // Setting the lock output port to 1
        outQ = pushQ(outQ, {t+0, A_a, B_b, B__in, 1, true}); // SET(outB, 1)
        // Setting the lock output port to 1
        outQ = pushQ(outQ, {t+0, A_a, C_c, C__in, 1, true}); // SET(outC, 1)
    =}
}

reactor B {
    input _in:int;
    state s:int;
    reaction(_in) {=
        s = value(_in);
        @observe
        s = s + 1;
        @observe
        s = s + 1;
        @observe
        s = s + 1;
    =}
}

reactor C {
    input _in:int;
    state s:int;
    reaction(_in) {=
        s = value(_in);
        @observe
        s = s + 1;
        @observe
        s = s + 1;
        @observe
        s = s + 1;
    =}
}

main reactor System {
    a = new A();
    b = new B();
    c = new C();
    
    a.outB -> b._in;
    a.outC -> c._in;
    
    preamble {=
        // Can these two system deviate?
        property in_sync : G(b.s - c.s <= 2 && c.s - b.s <= 2);
    =}
}
